<!-- <div class="product-template__container page-width"
  id="ProductSection-{{ section.id }}"
  data-section-id="{{ section.id }}"
  data-section-type="product"
  data-enable-history-state="true"
  data-ajax-enabled="{{ settings.enable_ajax }}"
>
  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {%- assign current_variant = product.selected_or_first_available_variant -%}
  {%- assign product_image_zoom_size = '1024x1024' -%}
  {%- assign product_image_scale = '2' -%}
  {%- assign enable_image_zoom = section.settings.enable_image_zoom -%}
  {%- assign compare_at_price = current_variant.compare_at_price -%}
  {%- assign price = current_variant.price -%}

  {% case section.settings.media_size %}
    {% when 'small' %}
      {%- assign product_media_width = 'medium-up--one-third' -%}
      {%- assign product_description_width = 'medium-up--two-thirds' -%}
      {%- assign height = 345 -%}
    {% when 'medium' %}
      {%- assign product_media_width = 'medium-up--one-half' -%}
      {%- assign product_description_width = 'medium-up--one-half' -%}
      {%- assign height = 530 -%}
    {% when 'large' %}
      {%- assign product_media_width = 'medium-up--two-thirds' -%}
      {%- assign product_description_width = 'medium-up--one-third' -%}
      {%- assign height = 720 -%}
    {% when 'full' %}
      {%- assign product_media_width = '' -%}
      {%- assign product_description_width = '' -%}
      {%- assign height = 1090 -%}
      {%- assign enable_image_zoom = false -%}
  {% endcase %}

  <div class="grid product-single{% if section.settings.enable_payment_button %} product-single--{{ section.settings.media_size }}-media{% endif %}">
    <div class="grid__item product-single__media-group {{ product_media_width }}{% if section.settings.media_size == 'full' %} product-single__media-group--full{% endif %}" data-product-single-media-group>
      {%- assign featured_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media -%}

      {%- for media in product.media -%}
        {% include 'media', media: media, featured_media: featured_media, height: height, enable_image_zoom: enable_image_zoom, image_zoom_size: product_image_zoom_size, image_scale: product_image_scale %}
      {%- endfor -%}

      <noscript>
        {% capture product_image_size %}{{ height }}x{% endcapture %}
        <img src="{{ featured_media | img_url: product_image_size, scale: product_image_scale }}" alt="{{ featured_media.alt }}" id="FeaturedMedia-{{ section.id }}" class="product-featured-media" style="max-width: {{ height }}px;">
      </noscript>

      {% assign first_3d_model = product.media | where: "media_type", "model" | first %}

      {%- if first_3d_model -%}
        <button
          aria-label="{{ 'products.product.view_in_space_label' | t }}"
          class="product-single__view-in-space"
          data-shopify-xr
          data-shopify-model3d-id="{{ first_3d_model.id }}"
          data-shopify-title="{{ product.title | escape }}"
          data-shopify-xr-hidden
        >
          {% include 'icon-3d-badge-full-color' %}<span class='product-single__view-in-space-text'>{{ 'products.product.view_in_space' | t }}</span>
        </button>
      {%- endif -%}


      {% if product.media.size > 1 %}
        {% if product.media.size > 4 %}
          {%- assign enable_thumbnail_slides = true -%}
        {% endif %}

        <div data-thumbnail-slider>
          <div class="thumbnails-wrapper{% if enable_thumbnail_slides == true %} slider-active{% endif %}" data-slider>
            {% if enable_thumbnail_slides == true %}
              <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__prev thumbnails-slider__prev--{{ section.id }}" data-slider-button>
                {% include 'icon-chevron-left' %}
                <span class="icon__fallback-text">{{ 'sections.slideshow.previous_slide' | t }}</span>
              </button>
            {% endif %}

            <ul class="product-single__thumbnails product-single__thumbnails-{{ section.id }}" data-slider-container>
              {% if enable_thumbnail_slides == true %}
                <div class="product-single__thumbnails-slider-track" data-slider-track>
              {% endif %}

              {% for media in product.media %}
                <li class="product-single__thumbnails-item product-single__thumbnails-item--{{ section.settings.media_size }} {% if enable_thumbnail_slides == true %} product-single__thumbnails-item-slide{% endif %} js"{% if enable_thumbnail_slides == true %} data-slider-slide-index="{{ forloop.index0 }}" data-slider-item{% endif %}>
                  <a href="{{ media.preview_image | img_url: product_image_zoom_size, scale: product_image_scale }}"
                    class="text-link product-single__thumbnail product-single__thumbnail--{{ section.id }}"
                    data-thumbnail-id="{{ section.id }}-{{ media.id }}"
                    {% if enable_thumbnail_slides == true %} data-slider-item-link{% endif %}
                    {% if enable_image_zoom %}data-zoom="{{ media.preview_image | img_url: product_image_zoom_size, scale: product_image_scale }}"{% endif %}>

                      {%- capture thumbnailAlt -%}
                        {%- if media.media_type == 'video' or media.media_type == 'external_video' -%}
                          {{ 'sections.featured_product.video_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                        {%- elsif media.media_type == 'model' -%}
                          {{ 'sections.featured_product.model_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                        {%- else -%}
                          {{ 'sections.featured_product.gallery_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                        {%- endif -%}
                      {%- endcapture -%}

                      <img class="product-single__thumbnail-image" src="{{ media.preview_image | img_url: '110x110', scale: 2 }}" alt="{{ thumbnailAlt }}">
                      {%- if media.media_type == 'video' or media.media_type =='external_video' -%}
                        <div class="product-single__thumbnail-badge">
                          {% include 'icon-video-badge-full-color' %}
                        </div>
                      {%- endif -%}
                      {%- if media.media_type == 'model' -%}
                        <div class="product-single__thumbnail-badge">
                          {% include 'icon-3d-badge-full-color' %}
                        </div>
                      {%- endif -%}
                  </a>
                </li>
              {% endfor %}

              {% if enable_thumbnail_slides == true %}
                </div>
              {% endif %}
            </ul>
            {% if enable_thumbnail_slides == true %}
              <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__next thumbnails-slider__next--{{ section.id }}" data-slider-button data-slider-button-next>
                {% include 'icon-chevron-right' %}
                <span class="icon__fallback-text">{{ 'sections.slideshow.next_slide' | t }}</span>
              </button>
            {% endif %}
          </div>
        </div>
      {% endif %}
    </div>

    <div class="grid__item {{ product_description_width }}">
      <div class="product-single__meta">

        <h1 class="product-single__title">{{ product.title }}</h1>
        <script>window.performance.mark('debut:product:title_visible');</script>

          <div class="product__price">
            {% include 'product-price', variant: current_variant, show_vendor: section.settings.show_vendor %}
          </div>

          {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
            <div class="product__policies rte" data-product-policies>
              {%- if cart.taxes_included -%}
                {{ 'products.product.include_taxes' | t }}
              {%- endif -%}
              {%- if shop.shipping_policy.body != blank -%}
                {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
              {%- endif -%}
            </div>
          {%- endif -%}

          {% capture "form_classes" -%}
            product-form product-form-{{ section.id }}
            {%- if section.settings.enable_payment_button and product.has_only_default_variant %} product-form--payment-button-no-variants {%- endif -%}
            {%- if current_variant.available == false %} product-form--variant-sold-out {%- endif -%}
          {%- endcapture %}

          {% form 'product', product, class:form_classes, novalidate: 'novalidate', data-product-form: '' %}
            {{ form | payment_terms }}

            {% unless product.has_only_default_variant %}
              <div class="product-form__controls-group">
                {% for option in product.options_with_values %}
                  <div class="selector-wrapper js product-form__item">
                    <label for="SingleOptionSelector-{{ forloop.index0 }}">
                      {{ option.name }}
                    </label>
                    <select class="single-option-selector single-option-selector-{{ section.id }} product-form__input"
                      id="SingleOptionSelector-{{ forloop.index0 }}"
                      data-index="option{{ forloop.index }}"
                    >
                      {% for value in option.values %}
                        <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value }}</option>
                      {% endfor %}
                    </select>
                  </div>
                {% endfor %}
              </div>
            {% endunless %}

            <select name="id" id="ProductSelect-{{ section.id }}" class="product-form__variants no-js">
              {% for variant in product.variants %}
                <option value="{{ variant.id }}"
                  {%- if variant == current_variant %} selected="selected" {%- endif -%}
                >
                  {{ variant.title }}  {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                </option>
              {% endfor %}
            </select>

            {% if section.settings.show_quantity_selector %}
              <div class="product-form__controls-group">
                <div class="product-form__item">
                  <label for="Quantity-{{ section.id }}">{{ 'products.product.quantity' | t }}</label>
                  <input type="number" id="Quantity-{{ section.id }}"
                    name="quantity" value="1" min="1" pattern="[0-9]*"
                    class="product-form__input product-form__input--quantity" data-quantity-input
                  >
                </div>
              </div>
            {% endif %}

            <div class="product-form__error-message-wrapper product-form__error-message-wrapper--hidden{% if section.settings.enable_payment_button %} product-form__error-message-wrapper--has-payment-button{% endif %}"
              data-error-message-wrapper
              role="alert"
            >
              <span class="visually-hidden">{{ 'general.accessibility.error' | t }} </span>
              {% include 'icon-error' %}
              <span class="product-form__error-message" data-error-message>{{ 'products.product.quantity_minimum_message' | t }}</span>
            </div>

            <div class="product-form__controls-group product-form__controls-group--submit">
              <div class="product-form__item product-form__item--submit
                {%- if section.settings.enable_payment_button %} product-form__item--payment-button {%- endif -%}
                {%- if product.has_only_default_variant %} product-form__item--no-variants {%- endif -%}"
              >
                <button type="submit" name="add"
                  {% unless current_variant.available %} aria-disabled="true"{% endunless %}
                  aria-label="{% unless current_variant.available %}{{ 'products.product.sold_out' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endunless %}"
                  class="btn product-form__cart-submit{% if section.settings.enable_payment_button and product.selling_plan_groups == empty %} btn--secondary-accent{% endif %}"
                  {% if settings.enable_ajax %}aria-haspopup="dialog"{% endif %}
                  data-add-to-cart>
                  <span data-add-to-cart-text>
                    {% unless current_variant.available %}
                      {{ 'products.product.sold_out' | t }}
                    {% else %}
                      {{ 'products.product.add_to_cart' | t }}
                    {% endunless %}
                  </span>
                  <span class="hide" data-loader>
                    {% include 'icon-spinner' %}
                  </span>
                </button>
                {% if section.settings.enable_payment_button %}
                  {{ form | payment_button }}
                {% endif %}
              </div>
            </div>
          {% endform %}
        </div> -->
{{ 'product-template.css' | asset_url | stylesheet_tag }}


<div class="cart-loader" id="cart-loader-spin"></div>
<div class="product-detail">

  <div class="product-media-left">
    <div class="swiper-container product-gallery slider">
      <div class="swiper-wrapper image-wrap">
        {% for image in product.images %}
        <div class="swiper-slide">
          <img class=" " src="{{ image | image_url:master}}" />
        </div>
        {% endfor %}
      </div>
    </div>


    <div class="swiper-container slider-thumbnail">
      <div class="swiper-wrapper">
        {% for image in product.images %}
        <div class="swiper-slide">
          <img class=" " src="{{ image | image_url:master}}" />
        </div>
        {% endfor %}
      </div>
      <div class="swiper-button-next"><svg xmlns="http://www.w3.org/2000/svg" width="52" height="52" viewBox="0 0 52 52"
          fill="none">
          <circle cx="26" cy="26" r="26" transform="matrix(-1 0 0 1 52 0)" fill="#A7693C" />
          <path d="M23 19L30 26L23 33" stroke="white" stroke-width="2" />
        </svg></div>
      <div class="swiper-button-prev"><svg xmlns="http://www.w3.org/2000/svg" width="52" height="52" viewBox="0 0 52 52"
          fill="none">
          <circle cx="26" cy="26" r="26" fill="#A7693C" />
          <path d="M29 19L22 26L29 33" stroke="white" stroke-width="2" />
        </svg></div>
    </div>
  </div>




  <div class="product-info-right">

    <h1 class="prod-title">{{ product.title }}</h1>
    <div class="product-prices">
      <div class="product-price">
        <p>{{ product.selected_or_first_available_variant.price | money }}</p>
      </div>
    </div>

    <div class="product-description">
      {% if product.description.size > 700 %}
        <div class="product-description-short">
        {{ product.description | truncate: 200, ". . " }}<a class="readmore" href="#">Show More</a>
        </div>
        <div class="product-description-full" style="display:none;">
        {{ product.description }}
        <br><a class="readless" href="#">Show Less</a>
        </div>
        {% else %}
          {{ product.description }}
      {% endif %}
    </div>

    <div class="prod-recc">
      {% for block in section.blocks %}
      <div class="det-icon-container">
        <div class="icon-text-main">
          <div class="icon-text-wrap">
            <div class="det-icon-wrp">
              <img class="det-icon" src="{{ block.settings.det_icon | img_url : 'master' }}" alt="Icon" />
            </div>
            <div class="det-text">
              <p class="det-desc">{{ block.settings.det-desc }}</p>
            </div>
          </div>
        </div>
      </div>
      {% endfor %}
    </div>

    <form id="addToCart" data-atc>
    <input type="hidden" id="product-id" name="id" value="{{product.selected_or_first_available_variant}}">
    {% if product.variants.size > 1 %}
    <div class="product-option">
      {% for option in product.options_with_values %}
      <fieldset>
        <legend>{{ option.name}}</legend>
        <div class="option-wrap">
          {% for value in option.values %}
          <div class="option-swatch" data-option="{{option.name}}"  id="prodSwatch">
            <input  {% if option.selected_value==value %} checked {% endif %} type="radio" name="{{option.name}}"
              value="{{value}}" id="{{ option.name | handlize }} - {{ value | handlize }}"> 
              <span class="color-swatch">{{ value }}</span>
          </div>  
          {% endfor %}
        </div>
      </fieldset>
      {% endfor %}
    </div> 
    {% endif %}
    <div class="cart-qty-flex"> 
      <div class="product-quantity">
        <label for="quantity">Quantity</label>
        <button type="button" class="quantity-selector-minus">{% include 'minus.svg.liquid' %}</button>
        <input id="quantity" name="quantity" value="1" class="quantity-selector-inputelector-">
        <button type="button" class="quantity-selector-plus">{% include 'plus.svg.liquid' %}</button>
      </div>
    
      <div class="cart-wrap">
        <button type="submit" class="btn btn-primary">
          Add to Cart
        </button>
      </div>
    </div>
  
   </form>
  </div>
</div>

<script>



  var product = {{ product | json }}
  // Function to match variants and update product form and price
  function matchVariantsAndUpdate() {
    // Find selected options
    var selectedOptions = [];
    document.querySelectorAll('.product-option input[type="radio"]:checked').forEach(radio => {
      selectedOptions.push(radio.value);
    });
    // Finding the matched variant
    var matchedVariant = product.variants.find(variant => {
      var pass = true;
      for (var i = 0; i < selectedOptions.length; i++) {
        if (selectedOptions.indexOf(variant.options[i]) == -1) {
          pass = false;
          break;
        }
      }
      return pass;
    });
   
    // Change Product form variant id
    document.querySelector('#product-id').value = matchedVariant.id;
    // Change price
    document.querySelector('.product-price').textContent = formatMoney(matchedVariant.price, "{{ shop.money_format}}");
  }
 
  document.addEventListener('DOMContentLoaded', () => {
    matchVariantsAndUpdate();
    // Add event listeners to the radio inputs for future changes
    document.querySelectorAll('.product-option input[type="radio"]').forEach(radio => {
      radio.addEventListener('change', matchVariantsAndUpdate);
    });
  });
 
  document.addEventListener('DOMContentLoaded', function (){
    addCartDrawerListeners();
    

    function OpenCartDrawer(){
    document.querySelector(".cart-drawer").classList.add("cart-drawer--active")
    document.querySelector('body').classList.add('cart-drawer-open')
    }

    function closecartDrawer(){
    document.querySelector(".cart-drawer").classList.remove("cart-drawer--active")
    document.querySelector('body').classList.remove('cart-drawer-open')
    }
 
    document.querySelectorAll('[data-atc]').forEach((btn) => {
      btn.addEventListener("submit", async(e) =>{
        e.preventDefault();
      const form = btn.closest('form');
      const formData = new FormData(form);

      //submit form with ajax
      await fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      });

      //Get cart count
      const res = await fetch("/cart.js");
      const cart = await res.json();
      updateCartItemCounts(cart.item_count);
        //Update cart
         await UpdateCartDrawer();

      //Open cart drawer
      OpenCartDrawer();
    });
  });
   

  function updateCartItemCounts(count) {
  document.querySelectorAll(".cart-count").forEach((el) => {
    el.textContent = count;
  });
  }

  async function UpdateCartDrawer(){
    const res = await fetch("/?section_id=cart-drawer");
    const text = await res.text();
    const html = document.createElement("div");
    html.innerHTML = text;

    const newBox = html.querySelector(".cart-drawer").innerHTML;
    document.querySelector(".cart-drawer").innerHTML = newBox;
    addCartDrawerListeners();
    removeCartItem();
    window.cartEvents();
  }


  const updateCartItem = async (key, quantity) => {
    const body = {
         id: `${key}`,
         quantity: quantity
       }
       const headers = {
            Accept: "application/json",
            "Content-Type": "application/json",
          }
        //Ajax update
        const res = await fetch("/cart/change.js", {
          method: "post",
          headers: headers,
          body: JSON.stringify(body)
          });
          const cart = await res.json();
          updateCartItemCounts(cart.item_count);

          //Update cart
          UpdateCartDrawer();
  }


  function addCartDrawerListeners(){
      //Update cart quantity
    document.querySelectorAll(".cart-drawer-quantity-selector button").forEach((button) => {
      button.addEventListener("click", async() => {
       
        // Get line item key  
        const cartKeyEl = button.closest('[data-key]');
        const cartItemKey = cartKeyEl.getAttribute("data-line-item-key")

        //Get new quantity
        const currentQuantity = Number(
          button.parentElement.querySelector("input").value
        );
        
        const isUp = button.classList.contains(
          "cart-drawer-quantity-selector-plus"
        );
        const newQuantity = isUp ? currentQuantity + 1 : currentQuantity - 1;

         await updateCartItem(cartItemKey, newQuantity);
          })
    
          document.querySelector(".cart-drawer-box").addEventListener("click", (e) => {
          e.stopPropagation();
          });
    })
  }

  //Remove button
  function removeCartItem(){
      //Update cart quantity
      document.querySelectorAll(".remove-btn-wrp button").forEach((button) => {
      button.addEventListener("click", async() => {
        // Get line item key 
        const rootItemRem = button.parentElement.parentElement.parentElement.parentElement;
        const key = rootItemRem.getAttribute("data-line-item-key")
        

        await updateCartItem(key, 0);
    
          document.querySelector(".cart-drawer-box").addEventListener("click", (e) => {
          e.stopPropagation();
          });
        });
  })
}

      //For product variant swatches//
      document.querySelectorAll('.color-swatch').forEach(element =>{
      element.addEventListener('click',(ev) =>{
          const parent=ev.target.closest('.option-swatch');
          document.querySelectorAll('.option-swatch.active')?.forEach((option) =>{
            const classes=parent.dataset.option;
            const optionParentclass = option.dataset.option;
            if(classes==optionParentclass){
              option?.classList.remove('active')
            }
         
          })
          parent.classList.add('active');
          parent.querySelector('input').checked = true;
          parent.querySelector('input').dispatchEvent(new Event('change'));
       
      })
  });
});

//To set first option as default value when page is loaded
document.querySelectorAll('.option-wrap').forEach(optionWrap => {
    const firstRadioButton = optionWrap.querySelector('input[type="radio"]');
    if (firstRadioButton) {
      firstRadioButton.checked = true;
      const firstRadioButtonParent = firstRadioButton.closest('.option-swatch');
      firstRadioButtonParent.classList.add('active');
    }
  });

  //swiper//
  var sliderThumbnail = new Swiper('.slider-thumbnail', {
    slidesPerView: 4,
    freeMode: true,
    watchSlidesVisibility: true,
    watchSlidesProgress: true,
  });


  var slider = new Swiper('.slider', {
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    thumbs: {
      swiper: sliderThumbnail
    }
  });

  //For quantity selector inc and dec//
  document.querySelector('.quantity-selector-plus').addEventListener('click', () => {
    var currentVal = Number(document.querySelector('#quantity').value)
    document.querySelector('#quantity').value = currentVal + 1;
  })

  document.querySelector('.quantity-selector-minus').addEventListener('click', () => {
    var currentVal = Number(document.querySelector('#quantity').value)
    if (currentVal > 1) {
      document.querySelector('#quantity').value = currentVal - 1;
    }

  })


//Product descript - Read more
document.querySelector('.readmore').addEventListener('click', (event) => {
  event.preventDefault();
  var descriptionFull = document.querySelector('.product-description-full');
  descriptionFull.style.display = 'block';
  var descriptionShort = document.querySelector('.product-description-short');
  descriptionShort.style.display = 'none';
});
document.querySelector('.readless').addEventListener('click', (event) => {
  event.preventDefault();
  var descriptionFull = document.querySelector('.product-description-full');
  descriptionFull.style.display = 'none';
  var descriptionShort = document.querySelector('.product-description-short');
  descriptionShort.style.display = 'block';
});  



 

</script>


{% schema %}
{
"name": "Product right Block",
"class": "section",
"settings": [ ],
"blocks": [
{
"name": "Icon Block",
"type": "cardType",
"settings": [
{
"type": "image_picker",
"id": "det_icon",
"label": "Icon"
},
{
"type": "text",
"id": "det-desc",
"label": "Text"
}
]
}
],
"presets": [
{
"name": "Product right Block"
}
]
}
{% endschema %}